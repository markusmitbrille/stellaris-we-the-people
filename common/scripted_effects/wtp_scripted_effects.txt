# this = planet
wtp_effect_grant_autonomy = {
	log = "WTP::wtp_effect_grant_autonomy(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	owner = {
		save_event_target_as = wtp_mother_country
	}
	# release rebel country
	wtp_effect_release = yes
	event_target:wtp_mother_country = {
		# nerf govenrment ethics
		add_modifier = {
			modifier = wtp_mod_granted_autonomy
			years = 10
		}
		# remove positive opinion
		remove_opinion_modifier = {
			who = event_target:wtp_last_rebel_country
			modifier = opinion_we_liberated
		}
	}
	# setup rebel country
	event_target:wtp_last_rebel_country = {
		# make vassal
		set_subject_of = {
			who = event_target:wtp_mother_country
			subject_type = vassal
		}
		# remove negative opinion
		remove_opinion_modifier = {
			who = event_target:wtp_mother_country
			modifier = opinion_broke_away_from
		}
		# boost government ethics
		add_modifier = {
			modifier = wtp_mod_recent_revolution
			years = 20
		}
		# give small defense fleet
		create_fleet_from_naval_cap = 0.4
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
	}
}

# this = planet
wtp_effect_start_war = {
	log = "WTP::wtp_effect_start_war(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	owner = {
		save_event_target_as = wtp_mother_country
	}
	# release rebel coutnry
	wtp_effect_release = yes
	event_target:wtp_mother_country = {
		# remove positive opinion
		remove_opinion_modifier = {
			who = event_target:wtp_last_rebel_country
			modifier = opinion_we_liberated
		}
		# remove truce
		end_truce = event_target:wtp_last_rebel_country
	}
	event_target:wtp_last_rebel_country = {
		# save rebel alliance leader for later
		save_event_target_as = wtp_rebel_alliance_leader
		# remove positive opinion
		remove_opinion_modifier = {
			who = event_target:wtp_mother_country
			modifier = opinion_liberated_us
		}
		# remove truce
		end_truce = event_target:wtp_mother_country
		# boost govenrment ethics
		add_modifier = {
			modifier = wtp_mod_revolutionary_war
			years = 20
		}
		# give large rebel armada
		create_fleet_from_naval_cap = 0.4
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet_from_naval_cap = 0.4
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
	}
	# chain reaction
	if = {
		limit = {
			event_target:wtp_mother_country = {
				any_owned_planet = {
					wtp_trigger_has_unrest = yes
				}
			}
		}
		# boost rebel alliance leader
		event_target:wtp_rebel_alliance_leader = {
			# additional resources
			add_resource = {
				energy = 5000
				alloys = 700
				influence = 550
			}
		}
		# release others
		event_target:wtp_mother_country = {
			while = {
				count = 20
				limit = {
					any_owned_planet = {
						wtp_trigger_has_unrest = yes
					}
				}
				# release random rebel
				random_owned_planet = {
					limit = {
						wtp_trigger_has_unrest = yes
					}
					wtp_effect_release = yes
				}
				# change relationship
				add_opinion_modifier = {
					who = event_target:wtp_last_rebel_country
					modifier = wtp_opinion_rebel
				}
				# remove truce
				end_truce = event_target:wtp_last_rebel_country
				# setup rebel country
				event_target:wtp_last_rebel_country = {
					# give sizable support fleet
					create_fleet_from_naval_cap = 0.2
					random_owned_planet = {
						last_created_fleet = {
							set_location = prev
						}
					}
					create_fleet_from_naval_cap = 0.2
					random_owned_planet = {
						last_created_fleet = {
							set_location = prev
						}
					}
					# remove positive opinion
					remove_opinion_modifier = {
						who = event_target:wtp_mother_country
						modifier = opinion_liberated_us
					}
					# remove truce
					end_truce = event_target:wtp_mother_country
					# boost govenrment ethics
					add_modifier = {
						modifier = wtp_mod_revolutionary_war
						years = 20
					}
					# join rebel alliance
					join_alliance = {
						who = event_target:wtp_rebel_alliance_leader
						override_requirements = yes
					}
					# fixes naming issues, maybe
					set_name = random
				}
			}
		}
		# setup rebel alliance
		event_target:wtp_rebel_alliance_leader = {
			# set leader
			set_federation_leader = event_target:wtp_rebel_alliance_leader
			# mutual opinion modifiers for all rebel alliance members
			federation = {
				every_member = {
					prev = {
						every_member = {
							limit = {
								NOT = {
									is_country = prevprev
								}
							}
							add_opinion_modifier = {
								who = prevprev
								modifier = wtp_opinion_fellow_revolutionary
							}
						}
					}
				}
			}
		}
	}
	event_target:wtp_mother_country = {
		# declare war
		declare_war = {
			target = event_target:wtp_rebel_alliance_leader
			attacker_war_goal = wtp_wg_revolutionary_war
		}
	}
}

@wtp_starting_minerals = 5000
@wtp_starting_energy = 10000
@wtp_starting_food = 1000
@wtp_starting_alloys = 300
@wtp_starting_influence = 200
# this = planet
wtp_effect_release = {
	log = "WTP::wtp_effect_release(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	# create rebel country
	switch = {
		trigger = has_modifier
		wtp_mod_unrest_spiritualist = {
			wtp_effect_create_rebel_country = {
				ethic = spiritualist
			}
		}
		wtp_mod_unrest_materialist = {
			wtp_effect_create_rebel_country = {
				ethic = materialist
			}
		}
		wtp_mod_unrest_militarist = {
			wtp_effect_create_rebel_country = {
				ethic = militarist
			}
		}
		wtp_mod_unrest_pacifist = {
			wtp_effect_create_rebel_country = {
				ethic = pacifist
			}
		}
		wtp_mod_unrest_xenophobe = {
			wtp_effect_create_rebel_country = {
				ethic = xenophobe
			}
		}
		wtp_mod_unrest_xenophile = {
			wtp_effect_create_rebel_country = {
				ethic = xenophile
			}
		}
		wtp_mod_unrest_egalitarian = {
			wtp_effect_create_rebel_country = {
				ethic = egalitarian
			}
		}
		wtp_mod_unrest_authoritarian = {
			wtp_effect_create_rebel_country = {
				ethic = authoritarian
			}
		}
	}
	# setup rebel country
	event_target:wtp_last_rebel_country = {
		# silent comms
		establish_communications_no_message = event_target:wtp_mother_country
		# starting resources
		add_resource = {
			minerals = @wtp_starting_minerals
			energy = @wtp_starting_energy
			food = @wtp_starting_food
			alloys = @wtp_starting_alloys
			influence = @wtp_starting_influence
		}
		# starting leaders
		create_starting_leaders = yes
	}
	# transfer capital system
	solar_system = {
		wtp_effect_transfer_system_to_rebels = yes
	}
	# make capital
	set_capital = yes
	# flag core systems
	event_target:wtp_mother_country = {
		capital_scope = {
			solar_system = {
				set_star_flag = wtp_flag_core_sector
				every_neighbor_system = {
					limit = {
						exists = owner
						owner = {
							is_country = event_target:wtp_mother_country
						}
					}
					set_star_flag = wtp_flag_core_sector
					every_neighbor_system = {
						limit = {
							exists = owner
							owner = {
								is_country = event_target:wtp_mother_country
							}
						}
						set_star_flag = wtp_flag_core_sector
						every_neighbor_system = {
							limit = {
								exists = owner
								owner = {
									is_country = event_target:wtp_mother_country
								}
							}
							set_star_flag = wtp_flag_core_sector
							every_neighbor_system = {
								limit = {
									exists = owner
									owner = {
										is_country = event_target:wtp_mother_country
									}
								}
								set_star_flag = wtp_flag_core_sector
							}
						}
					}
				}
			}
		}
	}
	# transfer nearby systems
	event_target:wtp_last_rebel_country = {
		capital_scope = {
			solar_system = {
				every_neighbor_system = {
					limit = {
						wtp_trigger_system_is_rebellious = yes
					}
					wtp_effect_transfer_system_to_rebels = yes
					every_neighbor_system = {
						limit = {
							wtp_trigger_system_is_rebellious = yes
						}
						wtp_effect_transfer_system_to_rebels = yes
						every_neighbor_system = {
							limit = {
								wtp_trigger_system_is_rebellious = yes
							}
							wtp_effect_transfer_system_to_rebels = yes
						}
					}
				}
			}
		}
	}
	# remove core flags
	event_target:wtp_mother_country = {
		every_system_within_border = {
			remove_star_flag = wtp_flag_core_sector
		}
	}
}

wtp_effect_create_rebel_country = {
	event_target:wtp_mother_country = {
		create_country = {
			type = default
			released_by_country = event_target:wtp_mother_country
			released_from_country = event_target:wtp_mother_country
			name_list = event_target:wtp_mother_country
			ship_prefix = event_target:wtp_mother_country
			species = event_target:wtp_mother_country
			origin = origin_separatists
			ethos = {
				ethic = ethic_fanatic_$ethic$
				ethic = random
			}
			ignore_initial_colony_error = yes
			day_zero_contact = no
			effect = {
				save_event_target_as = wtp_last_rebel_country
			}
		}
	}
}

# this = system
wtp_effect_transfer_system_to_rebels = {
	starbase = {
		set_owner = event_target:wtp_last_rebel_country
	}
	every_system_planet = {
		limit = {
			exists = owner
			owner = {
				is_country = event_target:wtp_mother_country
			}
		}
		# transfer planet
		set_owner = event_target:wtp_last_rebel_country
		set_controller = event_target:wtp_last_rebel_country
		# reset unrest
		wtp_effect_remove_unrest = yes
		set_variable = {
			which = wtp_var_unrest
			value = 0
		}
		# remove countermeasures
		remove_modifier = wtp_mod_propaganda
		remove_modifier = wtp_mod_crackdown
		# transfer armies
		every_planet_army = {
			limit = {
				owner = {
					is_country = event_target:wtp_mother_country
				}
			}
			set_owner = event_target:wtp_last_rebel_country
		}
	}
}

# this = planet
wtp_effect_start_unrest = {
	log = "WTP::wtp_effect_start_unrest(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	# remove other unrest modifiers first
	wtp_effect_remove_unrest = yes
	# add random unrest modifier
	random_list = {
		# spiritualist
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_spiritualist = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_spiritualist
				days = -1
			}
		}
		# materialist
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_materialist = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_materialist
				days = -1
			}
		}
		# militarist
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_militarist = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_militarist
				days = -1
			}
		}
		# pacifist
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_pacifist = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_pacifist
				days = -1
			}
		}
		# xenophobe
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_xenophobe = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_xenophobe
				days = -1
			}
		}
		# xenophile
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_xenophile = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_xenophile
				days = -1
			}
		}
		# egalitarian
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_egalitarian = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_egalitarian
				days = -1
			}
		}
		# authoritarian
		1 = {
			modifier = {
				factor = 0
				owner = {
					is_authoritarian = yes
				}
			}
			add_modifier = {
				modifier = wtp_mod_unrest_authoritarian
				days = -1
			}
		}
	}
}

# this = planet
wtp_effect_remove_unrest = {
	log = "WTP::wtp_effect_remove_unrest(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	remove_modifier = wtp_mod_unrest_spiritualist
	remove_modifier = wtp_mod_unrest_materialist
	remove_modifier = wtp_mod_unrest_militarist
	remove_modifier = wtp_mod_unrest_pacifist
	remove_modifier = wtp_mod_unrest_xenophobe
	remove_modifier = wtp_mod_unrest_xenophile
	remove_modifier = wtp_mod_unrest_egalitarian
	remove_modifier = wtp_mod_unrest_authoritarian
}

# this = planet
wtp_effect_calculate_planet_ethos = {
	log = "WTP::wtp_effect_calculate_planet_ethos(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	set_variable = {
		which = wtp_var_ethos
		value = 0
	}
	every_owned_pop = {
		limit = {
			is_being_purged = no
			is_being_assimilated = no
		}
		wtp_effect_calculate_pop_ethos = yes
	}
}

# this = pop
wtp_effect_calculate_pop_ethos = {
	log = "WTP::wtp_effect_calculate_pop_ethos(this = [This.GetName], root = [Root.GetName], from = [From.GetName], fromfrom = [FromFrom.GetName])"
	switch = {
		trigger = is_pop_category
		slave = {
			set_variable = {
				which = wtp_var_ethos
				value = 0.005
			}
		}
		worker = {
			set_variable = {
				which = wtp_var_ethos
				value = 0.01
			}
		}
		specialist = {
			set_variable = {
				which = wtp_var_ethos
				value = 0.05
			}
		}
		ruler = {
			set_variable = {
				which = wtp_var_ethos
				value = 0.1
			}
		}
	}
	if = {
		limit = {
			OR = {
				NOT = {
					exists = pop_faction
				}
				pop_faction = {
					is_owner_ethic_pop_faction = yes
				}
			}
		}
		planet = {
			subtract_variable = {
				which = wtp_var_ethos
				value = prev
			}
		}
	}
	else = {
		planet = {
			change_variable = {
				which = wtp_var_ethos
				value = prev
			}
		}
	}
}
